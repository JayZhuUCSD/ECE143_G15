# This notebook is to create one image of all_ratio vs different genres, which tries to find the distribution of all_ratio values over different genres. I provide with you five DataFrame, namely df_action, df_adventure, df_indie, df_casual and df_strategy, so there are totally five labels. You can just run my codes and you will see how these DataFrames look like.
# 
# Given these DataFrames, I think plotting the images should not be difficult and may just utilize one to two line of codes.
# 
# You may have different thoughts over how to plot the image. We can discuss more about it. But maybe first you can try plot some simple sketches.

# In[1]:


'''Convert the raw data in .jl format to a DataFrame'''
# Make the data into a list of all strings
with open('products_all.jl','r',encoding='utf8') as f:
    mylist=[line.rstrip('\n') for line in f]
data_length=len(mylist)
data_list=[]

# Convert the strings to dictionaries
import json
for i in mylist:
    d=json.loads(i)
    data_list.append(d)
list_keys=list(data_list[0].keys())

# The key_listed_used can vary for different tasks
# here just use three features as a demo
key_list_used=['all_ratio','platform','genres']
value_list1=[]
value_list2=[]
value_list3=[]
key1=key_list_used[0]
key2=key_list_used[1]
key3=key_list_used[2]
for i in data_list:
    # features w/o any values return None
    value_list1.append(i.get(key1))
    value_list2.append(i.get(key2))
    value_list3.append(i.get(key3))
value_list_used=[value_list1,value_list2,value_list3]
dic_used=dict(zip(key_list_used,value_list_used))

# Convert to DataFrame
import pandas as pd
df_used=pd.DataFrame(dic_used)


# In[2]:


df_used


# In[58]:


# Select data containing all_ratio values
df_with_all_ratio=df_used[df_used.all_ratio.str.contains('positive')]


# In[38]:


# get lists of all_ratio values and number of total reviews
list_all_ratio=[]
list_N_reviews=[]
for i in df_with_all_ratio.all_ratio:
    list_all_ratio.append(i.split()[0])
    list_N_reviews.append(i.split()[3])
len(list_all_ratio)
len(list_N_reviews)


# In[53]:


# get lists of different genres: action, adventure, indie, casual and strategy
list_all_genres=[]
list_genre_action=[]
list_genre_adventure=[]
list_genre_indie=[]
list_genre_casual=[]
list_genre_strategy=[]
for i in df_with_all_ratio.genres:
    if type(i)==list:
        for j in i:
            list_all_genres.append(j)
        if 'Action' in j:
            list_genre_action.append('Action')
        else:
            list_genre_action.append('none')
        if 'Adventure' in j:
            list_genre_adventure.append('Adventure')
        else:
            list_genre_adventure.append('none')
        if 'Indie' in j:
            list_genre_indie.append('Indie')
        else:
            list_genre_indie.append('none')
        if 'Casual' in j:
            list_genre_casual.append('Casual')
        else:
            list_genre_casual.append('none')
        if 'Strategy' in j:
            list_genre_strategy.append('Strategy')
        else:
            list_genre_strategy.append('none')
    else:
        list_all_genres.append(None)
        list_genre_action.append('none')
        list_genre_adventure.append('none')
        list_genre_indie.append('none')
        list_genre_casual.append('none')
        list_genre_strategy.append('none')
        list_all_genres
from collections import Counter
d=Counter(list_all_genres)
for word, count in d.most_common(10):
    print(word,' ', count)
len(list_genre_action)


# In[52]:


# DataFrame associates action genre with all_ratio
df_with_all_ratio_action=pd.DataFrame({'all_ratio':list_all_ratio,'genre':list_genre_action})
df_action=df_with_all_ratio_action[df_with_all_ratio_action.genre.str.contains('Action')]
df_action


# In[54]:


# DataFrame associates adventure genre with all_ratio
df_with_all_ratio_adventure=pd.DataFrame({'all_ratio':list_all_ratio,'genre':list_genre_adventure})
df_adventure=df_with_all_ratio_adventure[df_with_all_ratio_adventure.genre.str.contains('Adventure')]
df_adventure


# In[55]:


# DataFrame associates indie genre with all_ratio
df_with_all_ratio_indie=pd.DataFrame({'all_ratio':list_all_ratio,'genre':list_genre_indie})
df_indie=df_with_all_ratio_indie[df_with_all_ratio_indie.genre.str.contains('Indie')]
df_indie


# In[56]:


# DataFrame associates casual genre with all_ratio
df_with_all_ratio_casual=pd.DataFrame({'all_ratio':list_all_ratio,'genre':list_genre_casual})
df_casual=df_with_all_ratio_casual[df_with_all_ratio_casual.genre.str.contains('Casual')]
df_casual


# In[57]:


# DataFrame associates strategy genre with all_ratio
df_with_all_ratio_strategy=pd.DataFrame({'all_ratio':list_all_ratio,'genre':list_genre_strategy})
df_strategy=df_with_all_ratio_strategy[df_with_all_ratio_strategy.genre.str.contains('Strategy')]
df_strategy
